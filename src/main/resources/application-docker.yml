# Docker-specific configuration
server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful

# JWT Configuration
application:
  security:
    jwt:
      secret-key: ${APPLICATION_SECURITY_JWT_SECRET_KEY:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
      expiration: ${APPLICATION_SECURITY_JWT_EXPIRATION:86400000}

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/nexora}
    username: ${SPRING_DATASOURCE_USERNAME:nexora}
    password: ${SPRING_DATASOURCE_PASSWORD:nexora123}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      max-lifetime: 1200000
      auto-commit: true

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_schema: nexora
        format_sql: false
    show-sql: false

  lifecycle:
    timeout-per-shutdown-phase: ${SHUTDOWN_TIMEOUT:30s}

  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:rabbitmq}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:nexora}
    password: ${SPRING_RABBITMQ_PASSWORD:nexora123}

rabbitmq:
  queue:
    export:
      name: export-queue
  exchange:
    name: nexora-exchange
  routing:
    key:
      export: export.request

# Digital Ocean Spaces Configuration
do:
  spaces:
    key: ${DO_SPACES_KEY:DO00ERAK97UGV4YAG9PW}
    secret: ${DO_SPACES_SECRET:lfuC9dusLijDr9wDKoL8UbdN8RjJ4H075AQLJyghn4k}
    region: ${DO_SPACES_REGION:fra1}
    endpoint: ${DO_SPACES_ENDPOINT:https://fra1.digitaloceanspaces.com}
    bucket: ${DO_SPACES_BUCKET:nexora}
    public-url: ${DO_SPACES_PUBLIC_URL:https://nexora.fra1.digitaloceanspaces.com}

# Logging configuration for containers
logging:
  level:
    com.nexora: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"